# Required CI Environment Variables:
# CONAN_REMOTE_ADDRESS - The primary conan remote address to upload content to.
# CONAN_REMOTE_USER - The username to login to the remotes with.
# CONAN_REMOTE_PASSWORD - The password for the user to to login with.
# CONAN_USER - The name for use in the package declaration.

###########
# Globals #
###########

stages:
  - Build & Test
  - Stable Recipe Upload
  - Stable Binary Upload

################
# Build & Test #
################

.unix_build_template: &unix_build_template
  tags:
    - docker-linux
  script:
    - conan remote add -i 0 CI_Remote --force $CONAN_REMOTE_ADDRESS
    - conan create . $CONAN_USER/unstable --build missing -s build_type=Debug
    - conan create . $CONAN_USER/unstable --build missing -s build_type=Release

CentOS6/GCC Unstable:
  stage: Build & Test
  image: stabletec/build-core:centos6-gcc
  <<: *unix_build_template

CentOS/GCC Unstable:
  stage: Build & Test
  image: stabletec/build-core:centos-gcc
  <<: *unix_build_template

CentOS/Clang Unstable:
  stage: Build & Test
  image: stabletec/build-core:centos-clang
  <<: *unix_build_template

Fedora/GCC Unstable:
  stage: Build & Test
  image: stabletec/build-core:fedora-gcc
  <<: *unix_build_template

Fedora/Clang Unstable:
  stage: Build & Test
  image: stabletec/build-core:fedora-clang
  <<: *unix_build_template

Windows/MSVC2017 Unstable:
  stage: Build & Test
  tags:
    - docker-windows
  script:
    - echo 'try {'  | out-file -encoding utf8 build.ps1
    - echo "cd C:\workdir" | out-file -encoding utf8 -append build.ps1
    - echo "conan remote add -i 0 CI_Remote --force ${env:CONAN_REMOTE_ADDRESS}" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/unstable --build missing -s build_type=Debug" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/unstable --build missing -s build_type=Debug -s compiler.runtime=MDd" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/unstable --build missing -s build_type=Debug -s compiler.runtime=MTd" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/unstable --build missing -s build_type=Release" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/unstable --build missing -s build_type=Release -s compiler.runtime=MD" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/unstable --build missing -s build_type=Release -s compiler.runtime=MT" | out-file -encoding utf8 -append build.ps1
    - echo '} catch { exit 1 }' | out-file -encoding utf8 -append build.ps1
    - docker run --rm -v ${pwd}:C:\workdir stabletec/build-core:windows-msvc2017 C:\workdir\build.ps1

##############################
# Stable Recipe Upload Stage #
##############################

Recipe Upload Stable:
  stage: Stable Recipe Upload
  image: stabletec/conan:latest
  only:
    - tags
  tags:
    - docker-linux
  script:
    - conan remote add CI_Remote --force $CONAN_REMOTE_ADDRESS
    - conan export . $CONAN_USER/stable
    - conan user -r CI_Remote -p $CONAN_REMOTE_PASSWORD $CONAN_REMOTE_USER
    - conan upload -r CI_Remote --confirm mariadb-connector-c/*@$CONAN_USER/stable
  after_script:
    - conan user --clean

########################
# Stable Binary Upload #
########################

.unix_upload_template: &unix_upload_template
  only:
    - tags
  tags:
    - docker-linux
  script:
    - conan remote add -i 0 CI_Remote --force $CONAN_REMOTE_ADDRESS
    - conan create . $CONAN_USER/stable --update --not-export --build missing -s build_type=Debug
    - conan create . $CONAN_USER/stable --update --not-export --build missing -s build_type=Release
    - conan user -r CI_Remote -p $CONAN_REMOTE_PASSWORD $CONAN_REMOTE_USER
    - conan upload -r CI_Remote --confirm --check --all mariadb-connector-c/*@$CONAN_USER/stable
  after_script:
    - conan user --clean

CentOS6/GCC Stable:
  stage: Stable Binary Upload
  image: stabletec/build-core:centos6-gcc
  <<: *unix_upload_template

CentOS/GCC Stable:
  stage: Stable Binary Upload
  image: stabletec/build-core:centos-gcc
  <<: *unix_upload_template

CentOS/Clang Stable:
  stage: Stable Binary Upload
  image: stabletec/build-core:centos-clang
  <<: *unix_upload_template

Fedora/GCC Stable:
  stage: Stable Binary Upload
  image: stabletec/build-core:fedora-gcc
  <<: *unix_upload_template

Fedora/Clang Stable:
  stage: Stable Binary Upload
  image: stabletec/build-core:fedora-clang
  <<: *unix_upload_template

Windows/MSVC2017 Stable:
  stage: Stable Binary Upload
  tags:
    - docker-windows
  only:
    - tags
  script:
    - echo 'try {'  | out-file -encoding utf8 build.ps1
    - echo "cd C:\workdir" | out-file -encoding utf8 -append build.ps1
    - echo "conan remote add -i 0 CI_Remote --force ${env:CONAN_REMOTE_ADDRESS}" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/stable --update --not-export --build missing -s build_type=Debug" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/stable --update --not-export --build missing -s build_type=Debug -s compiler.runtime=MDd" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/stable --update --not-export --build missing -s build_type=Debug -s compiler.runtime=MTd" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/stable --update --not-export --build missing -s build_type=Release" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/stable --update --not-export --build missing -s build_type=Release -s compiler.runtime=MD" | out-file -encoding utf8 -append build.ps1
    - echo "conan create . ${env:CONAN_USER}/stable --update --not-export --build missing -s build_type=Release -s compiler.runtime=MT" | out-file -encoding utf8 -append build.ps1
    - echo "conan user -r CI_Remote -p "${env:CONAN_REMOTE_PASSWORD}" ${env:CONAN_REMOTE_USER}" | out-file -encoding utf8 -append build.ps1
    - echo "conan upload -r CI_Remote --confirm --check --all mariadb-connector-c/*@${env:CONAN_USER}/stable" | out-file -encoding utf8 -append build.ps1
    - echo '} catch { exit 1 }' | out-file -encoding utf8 -append build.ps1
    - docker run --rm -v ${pwd}:C:\workdir stabletec/build-core:windows-msvc2017 C:\workdir\build.ps1